d = as.dist(matrix(c(0, 0.3, 0.4, 0.7,
0.3, 0, 0.5, 0.8,
0.4, 0.5, 0.0, 0.45,
0.7, 0.8, 0.45, 0.0), nrow=4))
plot(hclust(d, method="complete"))
d = as.dist(matrix(c(0, 0.3, 0.4, 0.7,
0.3, 0, 0.5, 0.8,
0.4, 0.5, 0.0, 0.45,
0.7, 0.8, 0.45, 0.0), nrow=4))
plot(hclust(d, method="single"))
d = as.dist(matrix(c(0, 0.3, 0.4, 0.7,
0.3, 0, 0.5, 0.8,
0.4, 0.5, 0.0, 0.45,
0.7, 0.8, 0.45, 0.0), nrow=4))
plot(hclust(d, method="average"))
d = as.dist(matrix(c(0, 0.3, 0.4, 0.7,
0.3, 0, 0.5, 0.8,
0.4, 0.5, 0.0, 0.45,
0.7, 0.8, 0.45, 0.0), nrow=4))
plot(hclust(d, method="single"))
d = as.dist(matrix(c(0, 0.3, 0.4, 0.7,
0.3, 0, 0.5, 0.8,
0.4, 0.5, 0.0, 0.45,
0.7, 0.8, 0.45, 0.0), nrow=4))
plot(hclust(d, method="average"))
d = as.dist(matrix(c(0, 0.3, 0.4, 0.7,
0.3, 0, 0.5, 0.8,
0.4, 0.5, 0.0, 0.45,
0.7, 0.8, 0.45, 0.0), nrow=4))
plot(hclust(d, method="complete"))
d = as.dist(matrix(c(0, 0.3, 0.4, 0.7,
0.3, 0, 0.5, 0.8,
0.4, 0.5, 0.0, 0.45,
0.7, 0.8, 0.45, 0.0), nrow=4, labels=c(1,2,3,4)))
plot(hclust(d, method="complete"))
d = as.dist(matrix(c(0, 0.3, 0.4, 0.7,
0.3, 0, 0.5, 0.8,
0.4, 0.5, 0.0, 0.45,
0.7, 0.8, 0.45, 0.0), nrow=4, labels=c(1,2,3,4)))
plot(hclust(d, method="complete"))
d = as.dist(matrix(c(0, 0.3, 0.4, 0.7,
0.3, 0, 0.5, 0.8,
0.4, 0.5, 0.0, 0.45,
0.7, 0.8, 0.45, 0.0), nrow=4))
plot(hclust(d, method="complete"))
d = as.dist(matrix(c(0, 0.3, 0.4, 0.7,
0.3, 0, 0.5, 0.8,
0.4, 0.5, 0.0, 0.45,
0.7, 0.8, 0.45, 0.0), nrow=4))
plot(hclust(d, method="average"))
d = as.dist(matrix(c(0, 0.3, 0.4, 0.7,
0.3, 0, 0.5, 0.8,
0.4, 0.5, 0.0, 0.45,
0.7, 0.8, 0.45, 0.0), nrow=4))
plot(hclust(d, method="complete"))
install.packages(c("Dplyr", "Ggplot2", "Esquisse", "BioConductor", "Lubridate", "Mlr", "Caret", "RMarkdown"))
install.packages(c("dplyr", "ggplot2", "esquisse", "lubridate", "mlr", "caret", "rmarkdown"))
cls
import(dplyr);
library(dyplr)
library(dplyr)
?goog
?goog
goog
goog.dom.dataset
install.packages("goog.dom.dataset")
install.packages("goog")
?diff
box.test
?Box.test
goog
goog200
install.packages(goog200)
install.packages("goog200")
install.packages("goog200")
goog200
?goog200
?fpp2
install.packages('fpp2', dependencies = TRUE)
library(fpp2)
goog
install.packages('fpp2', dependencies = TRUE)
library(fpp2)
goog
autoplot(goog)
livestock
?goog
?livestock
install.packages("fracdiff")
install.packages('fpp2', dependencies = TRUE)
library(dplyr)
library(fpp2)
library.packages("forecast")
install.packages("fpp")
install.packages("fpp2")
library(fpp)
install.packages(c("expsmooth", "fma", "forecast"))
library(fpp)
install.packages("zoo")
install.packages("zoo")
library(fpp2)
library(forecast)
library(ggplot2)
library(forecast)
library(fma)
library(fpp2)
goog
# Plot the original series
autoplot(goog)
# Plot the original series
autoplot(goog)
# Plot the original series
autoplot(goog)
# Plot the differenced series
autoplot(diff(goog))
# ACF of the differenced series
ggAcf(diff(goog))
# Ljung-Box test of the differenced series
Box.test(diff(goog), lag = 10, type = "Ljung")
# Check the residuals from the naive forecasts applied to the goog series
goog %>% naive() %>% checkresiduals()
# Check the residuals from the seasonal naive forecasts applied to the ausbeer series
ausbeer %>% snaive() %>% checkresiduals()
?autoplot
?checkresiduals
clear
get(wd)
getwd()
setwd(/Users/vphan/WorkPlace/DataScience/Projects/Data Exploration/movie_tweetings)
setwd('/Users/vphan/WorkPlace/DataScience/Projects/Data Exploration/movie_tweetings')
get(wd)
install.packages(c("actuar", "ade4", "ade4TkGUI", "adegraphics", "adehabitatLT", "adehabitatMA", "AER", "agricolae", "AICcmodavg", "akima", "alphahull", "Amelia", "analogsea", "animation", "antiword", "ape", "aplpack", "arm", "arules", "arulesViz", "assertthat", "av", "aws.s3", "backports", "BatchJobs", "batchtools", "bayesplot", "BayesX", "BB", "bbmle", "bdsmatrix", "benchr", "betareg", "BH", "bibtex", "biclust", "BIFIEsurvey", "biglm", "bit", "BMA", "bookdown", "boot", "BradleyTerry2", "brglm", "brms", "brnn", "broom", "bst", "btergm", "C50", "Cairo", "callr", "candisc", "car", "carData", "caret", "cartogram", "catdata", "cba", "CDM", "checkmate", "chron", "circlize", "Ckmeans.1d.dp", "class", "classInt", "cli", "clipr", "clubSandwich", "clue", "cluster", "clusterSEs", "clusterSim", "clValid", "cmprsk", "coda", "codetools", "coin", "colorspace", "copula", "coRanking", "covr", "cowplot", "coxme", "crosstalk", "crs", "cubature", "Cubist", "curl", "DAAG", "data.table", "data.tree", "date", "DBI", "DBItest", "dbplyr", "ddalpha", "deldir", "dendextend", "deSolve", "devtools", "DiagrammeR", "diffusionMap", "difR", "digest", "dimRed", "directlabels", "DistributionUtils", "diveMove", "DoE.base", "doParallel", "doRedis", "doRNG", "dplyr", "DRR", "DT", "dtw", "dynlm", "e1071", "eaf", "earth", "Ecdat", "Ecfun", "effects", "egg", "eha", "eiPack", "elasticnet", "ellipse", "ellipsis", "emdbook", "emmeans", "emoa", "energy", "Epi", "ergm", "ergm.userterms", "esquisse", "evtree", "expm", "extraDistr", "FactoMineR", "fansi", "fastICA", "fBasics", "fda", "fda.usc", "ff", "ffbase", "fftw", "fGarch", "fields", "filehash", "fitdistrplus", "flexmix", "flexsurv", "fma", "FNN", "forcats", "foreach", "forecast", "fpc", "fracdiff", "frbs", "FrF2", "fs", "future", "future.apply", "future.batchtools", "GA", "gam", "gamair", "gamboostLSS", "gamlss", "gamlss.data", "gamlss.dist", "gamm4", "gbm", "gclus", "gcookbook", "GDINA", "gdtools", "gee", "geepack", "geometry", "geoR", "geosphere", "GGally", "ggformula", "ggplot2", "ggraph", "ggrepel", "ggridges", "ggstance", "ggthemes", "glasso", "glmertree", "glmmML", "glmmTMB", "glmnetUtils", "glue", "gmailr", "gmp", "gnm", "gof", "googleVis", "gower", "GPareto", "gpclib", "GPfit", "gplots", "gridGraphics", "gsl", "gstat", "gtable", "gtools", "Guerry", "h2o", "haven", "hdi", "heatmaply", "hexbin", "highcharter", "highr", "Hmisc", "hms", "hoa", "hrbrthemes", "htmltools", "htmlwidgets", "httpuv", "httr", "huge", "hunspell", "igraph", "inlinedocs", "intsvy", "ipred", "irace", "IRdisplay", "irr", "ISOcodes", "ISwR", "iterators", "jomo", "jpeg", "jsonlite", "kableExtra", "kangar00", "keras", "kernlab", "KernSmooth", "kinship2", "klaR", "knitcitations", "knitr", "kohonen", "koRpus", "LaF", "laGP", "Lahman", "LaplacesDemon", "lasso2", "latentnet", "later", "lattice", "lava", "lavaan", "lazyeval", "lcopula", "leaps", "lhs", "libcoin", "lintr", "liquidSVM", "listenv", "listviewer", "lme4", "lmerTest", "lmtest", "locfit", "logspline", "longmemo", "loo", "lpSolve", "lubridate", "lwgeom", "magick", "mapproj", "maptools", "mapview", "markdown", "MASS", "Matrix", "matrixStats", "maxLik", "maxlike", "MBESS", "mboost", "mclust", "MCMCglmm", "mda", "mediation", "memisc", "MEMSS", "metafor", "mets", "mgcv", "mice", "miceadds", "micemd", "microbenchmark", "mime", "mirtCAT", "miscTools", "missMDA", "mitml", "mitools", "mldr", "mldr.datasets", "mlmRev", "mlogit", "mlr", "mlrMBO", "mmpf", "mockery", "ModelMetrics", "modelr", "modeltools", "mosaic", "mosaicCalc", "mosaicData", "MPV", "mRMRe", "msm", "mstate", "multcomp", "multcompView", "MuMIn", "mvtnorm", "nanotime", "ncdf4", "neighbr", "network", "neuralnet", "nlme", "nloptr", "nlreg", "nnet", "nor1mix", "np", "numDeriv", "nycflights13", "odbc", "openssl", "optimx", "optmatch", "ordinal", "orientlib", "osmdata", "pamr", "pander", "parallelMap", "ParamHelpers", "party", "partykit", "PBSmapping", "pder", "pdfCluster", "pdftools", "pec", "PerformanceAnalytics", "permute", "pglm", "pillar", "pkgconfig", "pkgKitten", "pkgmaker", "PKI", "plm", "plotlyGeoAssets", "plotmo", "plotrix", "pls", "plyr", "pmml", "pmmlTransformations", "polyclip", "polycor", "polynom", "pool", "popEpi", "pre", "prettydoc", "prettyR", "prim", "pROC", "processx", "prodlim", "profileModel", "progress", "proxy", "ps", "pscl", "psych", "psychotools", "psychotree", "purrr", "pvclust", "qrng", "quadprog", "quantmod", "quantreg", "qvcalc", "R.devices", "R.methodsS3", "R.oo", "R.rsp", "R.utils", "R2jags", "R2OpenBUGS", "R6", "RandomFields", "RandomFieldsUtils", "randomForestSRC", "randtoolbox", "ranger", "RankAggreg", "RANN", "raster", "rasterVis", "Rcmdr", "RcmdrMisc", "Rcpp", "RcppArmadillo", "RcppEigen", "Rcsdp", "RCurl", "readr", "readxl", "recipes", "refund", "registry", "relations", "relsurv", "reprex", "reshape", "reshape2", "reticulate", "rex", "rgdal", "rgenoud", "rgeos", "rgl", "Rglpk", "riskRegression", "rjags", "rJava", "RJSONIO", "rlang", "rlecuyer", "rmapshaper", "rmarkdown", "Rmpfr", "rms", "RMySQL", "rngtools", "rngWELL", "robust", "robustbase", "roxygen2", "rpart", "rpart.plot", "RPostgres", "rrcov", "RRF", "rsample", "rsconnect", "Rserve", "RSNNS", "RSpectra", "RSQLite", "rstan", "rstanarm", "rstantools", "rstudioapi", "rsvg", "rticles", "Rtsne", "rugarch", "Runuran", "rversions", "rvest", "RWeka", "RWiener", "sampleSelection", "sandwich", "scales", "scalreg", "seasonal", "selectr", "sem", "seriation", "servr", "sfsmisc", "shiny", "shinyAce", "shinydashboardPlus", "shinyjqui", "shinythemes", "shinyWidgets", "SimComp", "SimDesign", "sirt", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "SkewHyperbolic", "slam", "Sleuth2", "smoof", "sn", "sna", "SnowballC", "sp", "spacetime", "spam", "spam64", "sparklyr", "SparseM", "spatial", "spatstat", "spatstat.data", "spatstat.utils", "spData", "spdep", "spelling", "spls", "StanHeaders", "stars", "statmod", "statnet.common", "stringi", "stringr", "strucchange", "styler", "subplex", "subselect", "SuppDists", "survey", "survival", "svglite", "SwarmSVM", "systemfit", "tables", "TAM", "TeachingDemos", "tensorflow", "tesseract", "testit", "testthat", "texreg", "tfestimators", "TH.data", "tibble", "tidyr", "tidyselect", "tidyverse", "timereg", "timeSeries", "tinytex", "tis", "tm", "tmap", "TMB", "triangle", "tripack", "tseries", "TSP", "TTR", "tufte", "usethis", "VarianceGamma", "varImp", "vcd", "vctrs", "vdiffr", "vegan", "VGAM", "VIM", "VineCopula", "vip", "visNetwork", "wavelets", "waveslim", "webp", "webshot", "whisker", "whoami", "withr", "WrightMap", "xergm.common", "xfun", "xgboost", "XML", "xml2", "xtable", "xts", "yaml", "zoo"))
knitr::opts_chunk$set(echo = TRUE, out.width = '80%', fig.align = 'center')
library(readr)
library(dplyr)
r --version
r version
version
